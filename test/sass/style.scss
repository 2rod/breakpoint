/*
 * BREAKPOINT TESTS
 */


// Import Breakpoint
@import "../../stylesheets/breakpoint";

//////////////////////////////
// Breakpoint Flags
//////////////////////////////
// Default Features
// $breakpoint-default-media:    screen;
// $breakpoint-default-feature:  max-width;
// $breakpoint-default-pair:     'width';

// Default Transforms
// $breakpoint-force-media-all:    true;
// $breakpoint-to-ems:             false;
// $breakpoint-resolution:         true;

// Default No Query Options
// $breakpoint-no-queries:       false;
// $breakpoint-no-query-wrappers: false;

// Deftault Base Font Size
// $breakpoint-base-font-size: 16px;


// TESTS

$single-pixel-value: 500px;
$single-em-value: 30em;
$breakpoint-to-ems: false;
/*
 * Assume $breakpoint-default-feature
 * if only a number
 * $single-pixel-value: #{$single-pixel-value};
 * $single-em-value: #{$single-em-value};
 */
.breakpoint-default-feature {
  @include breakpoint($single-pixel-value) {
    content: '$single-pixel-value';
    content: '@media (min-width: 500px)';
  }
  @include breakpoint($single-em-value) {
    content: '$single-em-value';
    content: '@media (min-width: 30em)';
  }
}
/* $breakpoint-to-ems: true; */
$breakpoint-to-ems: true;
.breakpoint-default-feature-to-ems {
  @include breakpoint($single-pixel-value) {
    content: '$single-pixel-value';
    content: '@media (min-width: 31.25em)';
  }
  @include breakpoint($single-em-value) {
    content: '$single-em-value';
    content: '@media (min-width: 30em)';
  }
}



$feature-first: height 500px ;
$value-first: 500px height;
$arbitrary-feature: lion 500px;
$feature-value-both-strings: portrait orientation;
$breakpoint-to-ems: false;
/*
 * Single value with feature
 * $feature-first : #{$feature-first};
 * $value-first : #{$value-first};
 * $arbitrary-feature : #{$arbitrary-feature};
 * $feature-value-both-strings : #{$feature-value-both-strings};
 */
.feature-value-pair {
  @include breakpoint($feature-first) {
    content: '$feature-first';
    content: '@media (height: 500px)';
  }
  @include breakpoint($value-first) {
    content: '$value-first';
    content: '@media (height: 500px)';
  }
  @include breakpoint($arbitrary-feature) {
    content: '$arbitrary-feature';
    content: '@media (lion: 500px)';
  }
  @include breakpoint($feature-value-both-strings) {
    content: '$feature-value-both-strings';
    content: '@media (orientation: portrait)';
  }
}
/* $breakpoint-to-ems: true; */
$breakpoint-to-ems: true;
.feature-value-pair-to-ems {
  @include breakpoint($feature-first) {
    content: '$feature-first';
    content: '@media (height: 31.25em)';
  }
  @include breakpoint($value-first) {
    content: '$value-first';
    content: '@media (height: 31.25em)';
  }
  @include breakpoint($arbitrary-feature) {
    content: '$arbitrary-feature';
    content: '@media (lion: 31.25em)';
  }
}



$min-max-default-feature: 500px 700px;
$breakpoint-to-ems: false;
/*
 * Set min-width/max-width
 * if both values are numbers
 * $min-max-default-feature : #{$min-max-default-feature};
 */
.min-max-default-feature {
  @include breakpoint($min-max-default-feature) {
    content: '$min-max-default-feature';
    content: '@media (min-width: 500px) and (max-width: 700px)';
  }
}
/* $breakpoint-to-ems: true; */
$breakpoint-to-ems: true;
.min-max-default-feature-to-ems {
  @include breakpoint($min-max-default-feature) {
    content: '$min-max-default-feature';
    content: '@media (min-width: 31.25em) and (max-width: 43.75em)';
  }
}



$feature-min-max: height 300px 700px;
$min-max-feature: 300px 700px height;
$arbitrary-feature-min-max: lion 300px 700px;
$breakpoint-to-ems: false;
/*
 * Set min/max of feature
 * if there are two numbers and a feature
 * $feature-min-max : #{$feature-min-max};
 * $min-max-feature : #{$min-max-feature};
 * $arbitrary-feature-min-max : #{$arbitrary-feature-min-max};
 */
.min-max-feature {
  @include breakpoint($feature-min-max) {
    content: '$feature-min-max';
    content: '@media (min-height: 300px) and (max-height: 700px)';
  }
  @include breakpoint($min-max-feature) {
    content: '$min-max-feature';
    content: '@media (min-height: 300px) and (max-height: 700px)';
  }
  @include breakpoint($arbitrary-feature-min-max) {
    content: '$arbitrary-feature-min-max';
    content: '@media (min-lion: 300px) and (max-lion: 700px)';
  }
}
/* $breakpoint-to-ems: true; */
$breakpoint-to-ems: true;
.min-max-feature-to-ems {
  @include breakpoint($feature-min-max) {
    content: '$feature-min-max';
    content: '@media (min-height: 18.75em) and (max-height: 43.75em)';
  }
  @include breakpoint($min-max-feature) {
    content: '$min-max-feature';
    content: '@media (min-height: 18.75em) and (max-height: 43.75em)';
  }
  @include breakpoint($arbitrary-feature-min-max) {
    content: '$arbitrary-feature-min-max';
    content: '@media (min-lion: 18.75em) and (max-lion: 43.75em)';
  }
}


$multidimensional: (max-width 700px) (orientation portrait);
$breakpoint-to-ems: false;
/*
 * Multidimensional lists,
 * assume each item is a feature value pair
 * $multidimensional : #{$multidimensional};
 */
.multidimensional {
  @include breakpoint($multidimensional) {
    content: '$multidimensional';
    content: '@media (max-width: 700px) and (orientation: portrait)';
  }
}
/* $breakpoint-to-ems: true; */
$breakpoint-to-ems: true;
.multidimensional-to-ems {
  @include breakpoint($multidimensional) {
    content: '$multidimensional';
    content: '@media (max-width: 43.75em) and (orientation: portrait)';
  }
}







////////////////////////////
// OLD TESTS
////////////////////////////


//////////////////////////////
// Media Queries
//////////////////////////////
$basic: 500px;
$basic-and: 500px monochrome;
$basic-or: 500px, tv 700px color;
$double: 700px 500px;
$double-string: orientation landscape;
$double-mixed: max-width 500px;
$triple: height 500px 700px;
$resolution: resolution 96dpi;
$dpr: min-resolution 1.4dppx;
$not: 'not screen';
$only: 'only tv';
$media-and: screen (max-width 500px);
$or: 500px, orientation landscape;
$no-query: 500px, no-query '.lte-ie9';

$advanced: 'only screen' 500px (max-resolution 144dpi), (500px 700px) (min-resolution 1.5dppx), no-query '.no-mq';

$nest-pre: 20em color;
$nest: append($nest-pre, (resolution 2.0dppx));

//////////////////////////////
// Tests
//////////////////////////////
#basic {
  @include breakpoint($basic) {
    content: '@media #{$breakpoint-default-media} and (#{$breakpoint-default-feature}: 500px)';
    content: 'Force All: #{$breakpoint-force-media-all}';
    content: 'To Ems: #{$breakpoint-to-ems}';
  }
}

#basic-and {
  @include breakpoint($basic-and) {
    content: '@media #{$breakpoint-default-media} and (#{$breakpoint-default-feature}: 500px) and (monochrome)';
    content: 'Force All: #{$breakpoint-force-media-all}';
    content: 'To Ems: #{$breakpoint-to-ems}';
  }
}

#basic-or {
  @include breakpoint($basic-or) {
    content: '@media #{$breakpoint-default-media} and (#{$breakpoint-default-feature}: 500px), tv and (#{$breakpoint-default-feature}: 700px) and (color)';
    content: 'Force All: #{$breakpoint-force-media-all}';
    content: 'To Ems: #{$breakpoint-to-ems}';
  }
}


#double {
  @include breakpoint($double) {
    content: '@media #{$breakpoint-default-media} and (min-#{$breakpoint-default-pair}: 500px) and (max-#{$breakpoint-default-pair}: 700px)';
  }
}

#double-string {
  @include breakpoint($double-string) {
    content: '@media #{$breakpoint-default-media} and (orientation: landscape)';
  }
}

#double-mixed {
  @include breakpoint($double-mixed) {
    content: '@media #{$breakpoint-default-media} and (max-width: 500px)';
  }
}

#triple {
  @include breakpoint($triple) {
    content: '@media #{$breakpoint-default-media} and (min-height: 500px) and (max-height: 700px)';
  }
}

#resolution {
  @include breakpoint($resolution) {
    @if ($breakpoint-resolutions) {
      content: '@media #{$breakpoint-default-media} and (resolution: 96dpi), #{$breakpoint-default-media} and (-webkit-device-pixel-ratio: 1)';
    }
    @else {
      content: '@media #{$breakpoint-default-media} and (resolution: 96dpi)';
    }

  }
}

#dpr {
  @include breakpoint($dpr) {
    content: '@media #{$breakpoint-default-media} and (-webkit-min-device-pixel-ratio: 2), #{$breakpoint-default-media} and (min--moz-device-pixel-ratio: 2), #{$breakpoint-default-media} and (min-resolution: 2ppx), #{$breakpoint-default-media} and (min-resolution: 192dpi)';
  }
}

#not {
  @include breakpoint($not) {
    content: '@media not screen';
  }
}

#only {
  @include breakpoint($only) {
    content: '@media only tv';
  }
}

#media-and {
  @include breakpoint($media-and) {
    content: '@media screen and (#{$breakpoint-default-feature}: 500px)';
  }
}

#or {
  @include breakpoint($or) {
    content: '@media #{$breakpoint-default-media} and (#{$breakpoint-default-feature}: 500px), (orientation: landscape)';
  }
}

#no-query {
  @include breakpoint($no-query) {
    content: '@media #{$breakpoint-default-media} and (#{$breakpoint-default-feature}: 500px)';
    content: '.lte-ie9 #no-query {}';
  }
}

#advanced {
  @include breakpoint($advanced) {
    @if ($breakpoint-resolutions) {
      content: '@media only screen and (#{$breakpoint-default-feature}: 500px) and (max-resolution: 144dpi), @media only screen and (#{$breakpoint-default-feature}: 500px) and (-webkit-max-device-pixel-ratio: 1.5), (#{$breakpoint-default-feature}: 700px) and (-webkit-min-device-pixel-ratio: 1.4), (#{$breakpoint-default-feature}: 700px) and (min--moz-device-pixel-ratio: 1.4), (#{$breakpoint-default-feature}: 700px) and (min-resolution: 1.4dppx), (#{$breakpoint-default-feature}: 700px) and (min-resolution: 134.4dpi)';
    }
    @else {
      content: '@media only screen and (#{$breakpoint-default-feature}: 500px) and (max-resolution 144dpi), (#{$breakpoint-default-feature}: 700px) and (-webkit-min-device-pixel-ratio: 1.4), (#{$breakpoint-default-feature}: 700px) and (min--moz-device-pixel-ratio: 1.4), (#{$breakpoint-default-feature}: 700px) and (min-resolution: 1.4dppx), (#{$breakpoint-default-feature}: 700px) and (min-resolution: 134.4dpi)';
    }

  }
}

#nest-pre {
  @include breakpoint($nest-pre) {
    content: '@media #{$breakpoint-default-media} and (#{$breakpoint-default-feature}: 20em) and (color)';
  }
}

#nest {
  @include breakpoint($nest) {
    content: '@media #{$breakpoint-default-media} and (#{$breakpoint-default-feature}: 20em) and (color) and (-webkit-device-pixel-ratio: 2), #{$breakpoint-default-media} and (#{$breakpoint-default-feature}: 20em) and (color) and (moz-device-pixel-ratio: 2), #{$breakpoint-default-media} and (#{$breakpoint-default-feature}: 20em) and (color) and (resolution: 2ppx), #{$breakpoint-default-media} and (#{$breakpoint-default-feature}: 20em) and (color) and (resolution: 192dpi)';
  }
}
